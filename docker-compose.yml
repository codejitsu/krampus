version: '2'

services:
    ########### CORE #################

    kafka:
        extends:
            file: base-containers.yml
            service: kafka-base

    grafana:
        extends:
            file: base-containers.yml
            service: grafana-base
        volumes:
            - ./compose-resources/grafana/conf:/opt/grafana/conf/:ro
            - ./compose-resources/grafana/dashboards:/src/dashboards/:ro

    # initializes grafana and dies.
    grafana-init:
        image: tutum/curl:trusty
        volumes:
            - ./compose-resources/grafana/init:/init/scripts/:ro
        command: bash /init/scripts/grafana-init.sh
        links:
            - grafana:grafana
        depends_on:
            - grafana

    # 3 node cassandra cluster
    cassandra-seed:
        extends:
            file: base-containers.yml
            service: cassandra-base
        container_name: cassandra-seed-node
        ports:
          - "9042:9042"   # Native transport
          - "7199:7199"   # JMX
          - "9160:9160"   # Thrift clients
        restart: always

    cassandra-node-1:
        extends:
            file: base-containers.yml
            service: cassandra-base
        volumes:
            - ./compose-resources/cassandra/scripts:/init/scripts/:ro
        command: bash /init/scripts/cassandra-wait-60.sh
        environment:
          - "CASSANDRA_SEEDS=cassandra-seed-node"
        depends_on:
          - cassandra-seed
        links:
          - cassandra-seed:cassandra-seed

    cassandra-node-2:
        extends:
            file: base-containers.yml
            service: cassandra-base
        volumes:
            - ./compose-resources/cassandra/scripts:/init/scripts/:ro
        command: bash /init/scripts/cassandra-wait-90.sh
        environment:
          - "CASSANDRA_SEEDS=cassandra-seed-node"
        depends_on:
          - cassandra-node-1
        links:
          - cassandra-node-1:cassandra-node-1
          - cassandra-seed:cassandra-seed

    # init cassandra schema and die
    cassandra-init:
        extends:
            file: base-containers.yml
            service: cassandra-base
        volumes:
            - ./compose-resources/cassandra/scripts:/init/scripts/:ro
            - ./compose-resources/cassandra/schema:/init/schema/:ro
        command: bash /init/scripts/cassandra-schema.sh
        environment:
          - "CASSANDRA_SEEDS=cassandra-seed-node"
        depends_on:
          - cassandra-seed
          - cassandra-node-1
          - cassandra-node-2
        links:
          - cassandra-seed:cassandra-seed

    ########### COMPONENTS ###########

    krampus-source:
        image: codejitsu/krampus-source:0.1-SNAPSHOT
        depends_on:
            - kafka
            - cassandra-init
        volumes:
        #TODO make source/producer communication via shared container somehow.
            - /tmp/share:/tmp/share
        stdin_open: true
        restart: always

    krampus-producer:
        image: codejitsu/krampus-producer:0.1-SNAPSHOT
        depends_on:
            - kafka
            - krampus-source
        volumes:
            - /tmp/share:/tmp/share
        stdin_open: true
        links:
            - kafka:kafka
        restart: always

    krampus-metrics-aggregator:
        image: codejitsu/krampus-metrics-aggregator:0.1-SNAPSHOT
        depends_on:
            - kafka
            - grafana-init
            - krampus-producer
        links:
            - kafka:kafka
        restart: always

    krampus-processor:
        image: codejitsu/krampus-processor:0.1-SNAPSHOT
        depends_on:
            - kafka
            - cassandra-init
            - krampus-producer
        links:
            - kafka:kafka
            - cassandra-seed:cassandra-seed
        restart: always

    krampus-web-app:
        image: codejitsu/krampus-web-app:0.1-SNAPSHOT
        ports:
            - "9000:9000"
        depends_on:
            - kafka
        links:
            - kafka:kafka
        restart: always